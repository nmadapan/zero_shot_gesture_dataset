###########################
* See online implementations in ZSL related to DAP, IAP, ESZSL etc. and try to replicate them
###########################

###########################
FG 2018 paper github page:
* Document the five splits. Create the mask files and the necessary zero shot files (class splits and stuff).
* Give the DAP baseline
* Give the SAE baseline
* Give the ESZSL baseline (this would require a lot of debugging)
* Document how to download the data, pre-process to create feature vectors
* Proof read all the files including the README.md
###########################

###########################
New additions:
1. Add hand related features
2. Model the problem as a multi multi-label classifier i.e. train a multi-label classifier for each group (LHM, RHM, OM, etc. )

Big ideas:
1. Smart data augmentation based on descriptors. Switch left and right hand, and create more classes automatically. It can be used for training.
2. Modeling the inter-dependencies between the semantic descriptors and integrating it with the zsl loss functions. Predicting each decriptor value using other descriptor values. If the regression R2 is close to 1 then, it can be used.
3. Modeling the T-ZSL problem as a sequence prediction problem. This would require you to annotate the gesture categories w.r.t sequence of descriptors. Train an recurrent network optimized to predict the sequence of descriptors.
###########################

###########################
dstruct =

  struct with fields:

			 train_per: 0.8000
	num_unseen_classes: 5
		   sd_mat_file: 'sd_data.mat'
		   sd_var_name: 'bin_sd'
			num_frames: 20
		cgd_data_input: [6696×120 double]
	   cgd_data_output: [6696×18 double]
	 source_data_input: [3984×120 double]
	source_data_output: [3984×8 double]
			  out_file: 'E:\fg2020_test\data\results\zsl_data_20_results'
				  algo: [1×1 classreg.learning.FitTemplate]
	  unseen_class_ids: [8 11 12 16 18]

Elapsed time is 0.000186 seconds.
	Unseen acc: 0.2407 	 4658.0269 secs

dstruct =

  struct with fields:

			 train_per: 0.8000
	num_unseen_classes: 5
		   sd_mat_file: 'sd_data.mat'
		   sd_var_name: 'bin_sd'
			num_frames: 20
		cgd_data_input: [6696×120 double]
	   cgd_data_output: [6696×18 double]
	 source_data_input: [3984×120 double]
	source_data_output: [3984×8 double]
			  out_file: 'E:\fg2020_test\data\results\zsl_data_20_results'
				  algo: [1×1 classreg.learning.FitTemplate]
	  unseen_class_ids: [5 9 15 16 26]
		seen_class_ids: [1 2 3 4 5 6 7 9 10 13 14 15 17 19 20 21 22 23 24 25 26]
	   seen_data_input: [8694×120 double]
	 unseen_data_input: [1986×120 double]
	  seen_data_output: [8694×1 double]
	unseen_data_output: [1986×1 double]
		 seen_attr_mat: [21×34 int8]
	   unseen_attr_mat: [5×34 int8]
			dap_models: {1×34 cell}
		unseen_fscores: {1×34 cell}
			tr_fscores: {1×34 cell}
			te_fscores: {1×34 cell}
		dap_unseen_acc: 0.2407

Elapsed time is 0.001870 seconds.
	Unseen acc: 0.1596 	 4619.6259 secs

dstruct =

  struct with fields:

			 train_per: 0.8000
	num_unseen_classes: 5
		   sd_mat_file: 'sd_data.mat'
		   sd_var_name: 'bin_sd'
			num_frames: 20
		cgd_data_input: [6696×120 double]
	   cgd_data_output: [6696×18 double]
	 source_data_input: [3984×120 double]
	source_data_output: [3984×8 double]
			  out_file: 'E:\fg2020_test\data\results\zsl_data_20_results'
				  algo: [1×1 classreg.learning.FitTemplate]
	  unseen_class_ids: [8 12 16 18 26]
		seen_class_ids: [1 2 3 4 6 7 8 10 11 12 13 14 17 18 19 20 21 22 23 24 25]
	   seen_data_input: [8694×120 double]
	 unseen_data_input: [1986×120 double]
	  seen_data_output: [8694×1 double]
	unseen_data_output: [1986×1 double]
		 seen_attr_mat: [21×34 int8]
	   unseen_attr_mat: [5×34 int8]
			dap_models: {1×34 cell}
		unseen_fscores: {1×34 cell}
			tr_fscores: {1×34 cell}
			te_fscores: {1×34 cell}
		dap_unseen_acc: 0.1596

Elapsed time is 0.000085 seconds.
	Unseen acc: 0.2346 	 4945.7022 secs

dstruct =

  struct with fields:

			 train_per: 0.8000
	num_unseen_classes: 5
		   sd_mat_file: 'sd_data.mat'
		   sd_var_name: 'bin_sd'
			num_frames: 20
		cgd_data_input: [6696×120 double]
	   cgd_data_output: [6696×18 double]
	 source_data_input: [3984×120 double]
	source_data_output: [3984×8 double]
			  out_file: 'E:\fg2020_test\data\results\zsl_data_20_results'
				  algo: [1×1 classreg.learning.FitTemplate]
	  unseen_class_ids: [1 8 10 11 26]
		seen_class_ids: [1 2 3 4 5 6 7 9 10 11 13 14 15 17 19 20 21 22 23 24 25]
	   seen_data_input: [8694×120 double]
	 unseen_data_input: [1986×120 double]
	  seen_data_output: [8694×1 double]
	unseen_data_output: [1986×1 double]
		 seen_attr_mat: [21×34 int8]
	   unseen_attr_mat: [5×34 int8]
			dap_models: {1×34 cell}
		unseen_fscores: {1×34 cell}
			tr_fscores: {1×34 cell}
			te_fscores: {1×34 cell}
		dap_unseen_acc: 0.2346

Elapsed time is 0.000065 seconds.
	Unseen acc: 0.3314 	 4966.6929 secs

dstruct =

  struct with fields:

			 train_per: 0.8000
	num_unseen_classes: 5
		   sd_mat_file: 'sd_data.mat'
		   sd_var_name: 'bin_sd'
			num_frames: 20
		cgd_data_input: [6696×120 double]
	   cgd_data_output: [6696×18 double]
	 source_data_input: [3984×120 double]
	source_data_output: [3984×8 double]
			  out_file: 'E:\fg2020_test\data\results\zsl_data_20_results'
				  algo: [1×1 classreg.learning.FitTemplate]
	  unseen_class_ids: [1 5 8 9 16]
		seen_class_ids: [2 3 4 5 6 7 9 12 13 14 15 16 17 18 19 20 21 22 23 24 25]
	   seen_data_input: [8568×120 double]
	 unseen_data_input: [2112×120 double]
	  seen_data_output: [8568×1 double]
	unseen_data_output: [2112×1 double]
		 seen_attr_mat: [21×34 int8]
	   unseen_attr_mat: [5×34 int8]
			dap_models: {1×34 cell}
		unseen_fscores: {1×34 cell}
			tr_fscores: {1×34 cell}
			te_fscores: {1×34 cell}
		dap_unseen_acc: 0.3314

Elapsed time is 0.000053 seconds.
	Unseen acc: 0.2654 	 5338.0562 secs
###########################
